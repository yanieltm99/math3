/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ExercisesIndexImport } from './routes/exercises/index'
import { Route as ExercisesTopicSlugIndexImport } from './routes/exercises/$topicSlug/index'
import { Route as ExercisesTopicSlugLevelSlugImport } from './routes/exercises/$topicSlug/$levelSlug'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExercisesIndexRoute = ExercisesIndexImport.update({
  id: '/exercises/',
  path: '/exercises/',
  getParentRoute: () => rootRoute,
} as any)

const ExercisesTopicSlugIndexRoute = ExercisesTopicSlugIndexImport.update({
  id: '/exercises/$topicSlug/',
  path: '/exercises/$topicSlug/',
  getParentRoute: () => rootRoute,
} as any)

const ExercisesTopicSlugLevelSlugRoute =
  ExercisesTopicSlugLevelSlugImport.update({
    id: '/exercises/$topicSlug/$levelSlug',
    path: '/exercises/$topicSlug/$levelSlug',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/exercises/': {
      id: '/exercises/'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof ExercisesIndexImport
      parentRoute: typeof rootRoute
    }
    '/exercises/$topicSlug/$levelSlug': {
      id: '/exercises/$topicSlug/$levelSlug'
      path: '/exercises/$topicSlug/$levelSlug'
      fullPath: '/exercises/$topicSlug/$levelSlug'
      preLoaderRoute: typeof ExercisesTopicSlugLevelSlugImport
      parentRoute: typeof rootRoute
    }
    '/exercises/$topicSlug/': {
      id: '/exercises/$topicSlug/'
      path: '/exercises/$topicSlug'
      fullPath: '/exercises/$topicSlug'
      preLoaderRoute: typeof ExercisesTopicSlugIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/exercises': typeof ExercisesIndexRoute
  '/exercises/$topicSlug/$levelSlug': typeof ExercisesTopicSlugLevelSlugRoute
  '/exercises/$topicSlug': typeof ExercisesTopicSlugIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/exercises': typeof ExercisesIndexRoute
  '/exercises/$topicSlug/$levelSlug': typeof ExercisesTopicSlugLevelSlugRoute
  '/exercises/$topicSlug': typeof ExercisesTopicSlugIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/exercises/': typeof ExercisesIndexRoute
  '/exercises/$topicSlug/$levelSlug': typeof ExercisesTopicSlugLevelSlugRoute
  '/exercises/$topicSlug/': typeof ExercisesTopicSlugIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/exercises'
    | '/exercises/$topicSlug/$levelSlug'
    | '/exercises/$topicSlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/exercises'
    | '/exercises/$topicSlug/$levelSlug'
    | '/exercises/$topicSlug'
  id:
    | '__root__'
    | '/'
    | '/exercises/'
    | '/exercises/$topicSlug/$levelSlug'
    | '/exercises/$topicSlug/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExercisesIndexRoute: typeof ExercisesIndexRoute
  ExercisesTopicSlugLevelSlugRoute: typeof ExercisesTopicSlugLevelSlugRoute
  ExercisesTopicSlugIndexRoute: typeof ExercisesTopicSlugIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExercisesIndexRoute: ExercisesIndexRoute,
  ExercisesTopicSlugLevelSlugRoute: ExercisesTopicSlugLevelSlugRoute,
  ExercisesTopicSlugIndexRoute: ExercisesTopicSlugIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/exercises/",
        "/exercises/$topicSlug/$levelSlug",
        "/exercises/$topicSlug/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/exercises/": {
      "filePath": "exercises/index.tsx"
    },
    "/exercises/$topicSlug/$levelSlug": {
      "filePath": "exercises/$topicSlug/$levelSlug.tsx"
    },
    "/exercises/$topicSlug/": {
      "filePath": "exercises/$topicSlug/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
